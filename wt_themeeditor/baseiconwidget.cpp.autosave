#include "baseiconwidget.h"
#include <QDebug>

void BaseIconWidget::mouseReleaseEvent(QMouseEvent *event){
    qDebug() << "left";
    emit onClicked();
}

BaseIconWidget::BaseIconWidget(const QString iconName)
{
    mIconName = iconName;
    init();
}

void BaseIconWidget::init(){
    setAlignment(Qt::AlignCenter);
    setFixedSize(120,120);
    installEventFilter(this);
    setAcceptDrops(true);
}


bool BaseIconWidget::eventFilter(QObject *watched, QEvent *event)  
{  
    if (watched == this) {  
            if (event->type() == QEvent::DragEnter) {  
                // [[2]]: 当拖放时鼠标进入label时, label接受拖放的动作  
                QDragEnterEvent *dee = dynamic_cast<QDragEnterEvent *>(event);  
                dee->acceptProposedAction();  
                return true;  
            } else if (event->type() == QEvent::Drop) {  
                // [[3]]: 当放操作发生后, 取得拖放的数据  
                QDropEvent *de = dynamic_cast<QDropEvent *>(event);  
                QList<QUrl> urls = de->mimeData()->urls();  
  
                if (urls.isEmpty()) { return true; }  
                QString path = urls.first().toLocalFile();  
  
                // [[4]]: 在label上显示拖放的图片  
                QImage image(path); // QImage对I/O优化过, QPixmap对显示优化  
                if (!image.isNull()) {  
                    image = image.scaled(ui->label->size(),  
                                         Qt::KeepAspectRatio,  
                                         Qt::SmoothTransformation);  
                    ui->label->setPixmap(QPixmap::fromImage(image));  
                }  
  
                return true;  
            }  
        }  
  
        return QMainWindow::eventFilter(watched, event);  
}  